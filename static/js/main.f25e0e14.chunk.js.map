{"version":3,"sources":["components/errorModal.js","components/table.js","components/form.js","mainTools/interests.js","mainTools/images.js","mainTools/usedImages.js","pages/fbBusinessTools.js","pages/alertManager.js","home.js","App.js","serviceWorker.js","index.js"],"names":["ErrorModal","useContext","GlobalContext","error","token","errorState","setErrorState","accessToken","Modal","show","onHide","backdrop","keyboard","Alert","className","variant","onClose","dismissible","Heading","DataTable","props","columns","data","sort","caption","filter","length","bootstrap4","keyField","defaultSorted","id","InputForm","dataType","searchFields","dataSetter","labelSetter","selectOptions","useState","undefined","userInput","setUserInput","noResults","setNoResults","dataRoutes","interests","images","campaigns","handleSubmit","e","a","preventDefault","dataCall","axios","get","response","Row","Col","xs","Form","onSubmit","md","Label","srOnly","Control","as","placeholder","name","value","onChange","target","option","nativeEvent","selectedIndex","text","hidden","map","i","key","type","Button","disabled","onClick","Badge","InterestFinder","fetchedData","setFetchedData","mappedFetched","useMemo","audience","audience_size","inputLabel","setInputLabel","dataField","order","ImageFinder","AssociatedImages","url","href","use","is_associated_creatives_in_adgroups","toString","created_time","true","false","formatter","cell","selectFilter","options","filterFactory","FbTools","showFBButton","setShowFBButton","userBusiness","setUserBusiness","businessAdAccounts","setBusinessAdAccounts","setAccessToken","useEffect","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","status","XFBML","parse","authResponse","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","then","businesses","catch","err","console","log","b","Container","fluid","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","Tabs","transition","Tab","eventKey","title","AlertManager","accountsDeepCopy","JSON","stringify","AdAccounts","initialInputState","School","useLocalStorage","alertList","setAlertList","adAccounts","setAdAccounts","filteredAccounts","alerts","f","offConditions","acc","matchCount","cumulativeCount","x","some","backOnConditions","criteria","currentStatus","goesBackOn","matchCheckDeep","minimumMatches","matchCheck","formattedDate","Date","toLocaleDateString","day","month","year","Card","Header","Body","persist","AlertOptions","Schools","index","Alerts","bg","ListGroup","Item","Subtitle","Text","alert","filteredAlert","time","styledID","substring","open","openAccountFB","Homepage","Navbar","Brand","to","Nav","exact","path","Home","createContext","Provider","children","store","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f25e0e14.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { GlobalContext } from \"../App.js\";\n\nexport default function ErrorModal() {\n  const { error, token } = useContext(GlobalContext);\n  const [errorState, setErrorState] = error;\n  const [accessToken] = token;\n\n  return (\n    <Modal\n      show={errorState}\n      onHide={() => setErrorState(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Alert\n        className=\"mb-0\"\n        variant=\"danger\"\n        onClose={() => setErrorState(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap!</Alert.Heading>\n        {accessToken ? (\n          <p>Please verify your input or refresh the application</p>\n        ) : (\n          <p>Please authenticate with your Facebook account to continue</p>\n        )}\n      </Alert>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nexport default function DataTable(props) {\n  const { columns, data, sort, caption, filter } = props;\n\n\n  return data.length ? (\n    <BootstrapTable\n      bootstrap4\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      caption={caption}\n      defaultSorted={sort}\n      id='tableDark'\n      filter={filter}\n    />\n  ) : null;\n}\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport axios from \"axios\";\n\n\nexport default function InputForm(props) {\n  const {\n    variant,\n    dataType,\n    searchFields,\n    dataSetter,\n    labelSetter,\n    selectOptions,\n  } = props;\n\n  const [userInput, setUserInput] = useState(undefined);\n  const [noResults, setNoResults] = useState(false);\n\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken] = token;\n\n  const dataRoutes = {\n    interests: `https://graph.facebook.com/search?type=adinterest&q=[${userInput}]&limit=10000&locale=en_US&access_token=${accessToken}`,\n    images: `https://graph.facebook.com/v8.0/${userInput}/adimages?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n    campaigns: `https://graph.facebook.com/v8.0/${userInput}/campaigns?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dataSetter(await dataCall());\n    setUserInput(\"\");\n    if (dataType === \"interests\") {\n      labelSetter(userInput);\n    }\n  };\n\n  const handleClear = () => {\n    setErrorState(false);\n    dataSetter([]);\n    setNoResults(false);\n  };\n\n  const handleChangeText = (e) => {\n    setUserInput(e.target.value);\n    dataSetter(undefined);\n  };\n\n  const handleChangeSelect = (e) => {\n    setUserInput(e.target.value);\n    let option = e.nativeEvent.target.selectedIndex;\n    labelSetter(e.nativeEvent.target[option].text);\n    dataSetter(undefined);\n  };\n\n\n  const dataCall = async () => {\n    try {\n      const response = await axios.get(dataRoutes[dataType]);\n      !response.data.data.length ? setNoResults(true) : setNoResults(false);\n      return response.data.data;\n    } catch (err) {\n      setErrorState(true);\n    }\n  };\n\n\n  return (\n    <>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Row className=\"align-items-center\">\n              <Col md=\"4\" xs=\"auto\">\n                <Form.Label srOnly />\n                {variant === \"select\" ? (\n                  <Form.Control\n                    className=\"mb-2\"\n                    as=\"select\"\n                    placeholder=\"Ad Account ID\"\n                    name=\"adAccount\"\n                    value={userInput}\n                    onChange={handleChangeSelect}\n                  >\n                    <option hidden>Select Ad Account</option>\n                    {selectOptions &&\n                      selectOptions.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                  </Form.Control>\n                ) : (\n                  <Form.Control\n                    className=\"mb-2\"\n                    type=\"text\"\n                    placeholder=\"Ad Interest\"\n                    name=\"interest\"\n                    value={userInput || \"\"}\n                    onChange={handleChangeText}\n                  />\n                )}\n              </Col>\n              <Col xs=\"auto\">\n                <Button disabled={!userInput} type=\"submit\" className=\"mb-2\">\n                  Get Data\n                </Button>\n              </Col>\n              <Col xs=\"auto\">\n                <Button variant=\"danger\" className=\"mb-2\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Col>\n              {noResults && (\n                <Col xs=\"auto\">\n                  <h4>\n                    <Badge variant=\"danger\">No Results</Badge>\n                  </h4>\n                </Col>\n              )}\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    interests: `\"interests\":[{\"id\":\"${i.id}\",\"name\":\"${i.name}\"}]}`,\n    name: i.name,\n    audience: i.audience_size,\n    id: i.id,\n  }));\n\nexport default function InterestFinder() {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n      {\n        text: \"ID/Name\",\n        dataField: \"interests\",\n        sort: true,\n      },\n      {\n        text: \"Name\",\n        dataField: \"name\",\n        sort: true,\n      },\n      {\n        text: \"Audience\",\n        dataField: \"audience\",\n        sort: true,\n      },\n    ]\n\n  const defaultSorted = [\n    {\n      dataField: \"audience\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        dataType=\"interests\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results of: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function ImageFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n    {\n      text: \"Image Name\",\n      dataField: \"name\",\n      sort: true,\n    },\n    {\n      text: \"Hash\",\n      dataField: \"hash\",\n      sort: true,\n    },\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"name,id,hash\"}\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={fetchedData}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    url: <a href={i.url}>Download</a>,\n    name: i.name,\n    use: i.is_associated_creatives_in_adgroups.toString(),\n    id: i.id,\n    created_time: i.created_time,\n  }));\n\nexport default function AssociatedImages(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const selectOptions = {\n    true: \"true\",\n    false: \"false\",\n  };\n\n  const columns = [\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n    {\n      text: \"URL\",\n      dataField: \"url\",\n      sort: true,\n    },\n    {\n      text: \"Currently in use?\",\n      dataField: \"use\",\n      sort: true,\n      formatter: (cell) => selectOptions[cell],\n      filter: selectFilter({\n        options: selectOptions,\n      }),\n    },\n    {\n      text: \"Created Time\",\n      dataField: \"created_time\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"use\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\n          \"id,name,url,is_associated_creatives_in_adgroups,created_time,updated_time\"\n        }\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n              filter={filterFactory()}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ErrorModal from \"../components/errorModal.js\";\nimport InterestFinder from \"../mainTools/interests.js\";\nimport ImageFinder from \"../mainTools/images.js\";\nimport AssociatedImages from \"../mainTools/usedImages.js\";\nimport axios from \"axios\";\n\nexport default function FbTools() {\n  const [showFBButton, setShowFBButton] = useState(true);\n  const [userBusiness, setUserBusiness] = useState(undefined);\n  const [businessAdAccounts, setBusinessAdAccounts] = useState(undefined);\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken, setAccessToken] = token;\n\n  useEffect(() => {\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: \"1045150769237017\",\n        cookie: true,\n        xfbml: true,\n        version: \"v8.0\",\n      });\n\n      window.FB.AppEvents.logPageView();\n\n      window.FB.getLoginStatus((response) => {\n        if (response.status !== \"connected\") {\n          setShowFBButton(true);\n          window.FB.XFBML.parse();\n        } else {\n          setShowFBButton(false);\n          setAccessToken(response.authResponse.accessToken);\n        }\n      });\n    };\n\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n  }, [setAccessToken]);\n\n  useEffect(() => {\n    accessToken &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/me?fields=businesses&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setUserBusiness(response.data.businesses.data[0].id);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [accessToken, setErrorState]);\n\n  useEffect(() => {\n    userBusiness &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/${userBusiness}/owned_ad_accounts?fields=name&limit=500&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setBusinessAdAccounts(\n            response.data.data.sort((a, b) => (a.id > b.id ? 1 : -1))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [userBusiness, accessToken, setErrorState]);\n\n  return (\n    <>\n      <Container fluid className=\"mt-3\">\n        <Row className='mb-3'>\n          <Col>\n            {showFBButton ? (\n              <div\n                className=\"fb-login-button\"\n                data-size=\"small\"\n                data-button-type=\"login_with\"\n                data-layout=\"rounded\"\n                data-auto-logout-link=\"false\"\n                data-use-continue-as=\"false\"\n                data-width=\"\"\n              ></div>\n            ) : (\n              <Badge variant=\"success\">Connected to FB</Badge>\n            )}\n          </Col>\n        </Row>\n        <Tabs transition={false}>\n          <Tab eventKey=\"interests\" title=\"Interest Finder\">\n            <InterestFinder accessToken={accessToken} />\n          </Tab>\n          <Tab eventKey=\"images\" title=\"Image Finder\">\n            <ImageFinder\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"used\" title=\"Assets in Use\">\n            <AssociatedImages\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n        </Tabs>\n      </Container>\n      <ErrorModal />\n    </>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport { useLocalStorage } from \"web-api-hooks\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { GrFacebook } from \"react-icons/gr\";\nimport { AlertOptions } from \"../data/alertOptions.json\";\nimport { AdAccounts } from \"../data/adAccountData.json\";\n\nconst matchCheck = (acc, alerts) => {\n  let matchCount = 0;\n  for (let i = 0; i < acc.offConditions.length; i++) {\n    if (\n      alerts.some(\n        (e) =>\n          e.School === acc.offConditions[i].School &&\n          e.Alert === acc.offConditions[i].Alert\n      )\n    ) {\n      matchCount++;\n      if (\n        acc.backOnConditions.criteria &&\n        alerts.some(\n          (e) =>\n            e.School === acc.backOnConditions.criteria.School &&\n            e.Alert === acc.backOnConditions.criteria.Alert\n        ) &&\n        acc.currentStatus === \"On\"\n      ) {\n        acc.backOnConditions.goesBackOn = true;\n      }\n      acc.currentStatus = \"Off\";\n    }\n  }\n  return matchCount;\n};\n\nconst matchCheckDeep = (acc, alerts) => {\n  let matchCount = 0;\n  let cumulativeCount = 0;\n  for (let i = 0; i < acc.offConditions.length; i++) {\n    for (let x = 0; x < acc.offConditions[i].length; x++) {\n      if (\n        alerts.some(\n          (e) =>\n            e.School === acc.offConditions[i][x].School &&\n            e.Alert === acc.offConditions[i][x].Alert\n        )\n      ) {\n        matchCount++;\n      }\n    }\n    if (matchCount === 2) {\n      cumulativeCount++;\n      if (\n        acc.backOnConditions.criteria &&\n        alerts.some(\n          (e) =>\n            e.School === acc.backOnConditions.criteria.School &&\n            e.Alert === acc.backOnConditions.criteria.Alert\n        ) &&\n        acc.currentStatus === \"On\"\n      ) {\n        acc.backOnConditions.goesBackOn = true;\n      }\n      acc.currentStatus = \"Off\";\n    }\n    matchCount = 0;\n  }\n  return cumulativeCount;\n};\n\nconst filterAccounts = (accounts, alerts) =>\n  accounts.filter((f) =>\n    f.offConditions.length > 2\n      ? matchCheckDeep(f, alerts) >= f.minimumMatches\n      : matchCheck(f, alerts) >= f.minimumMatches\n  );\n\nexport default function AlertManager() {\n  const accountsDeepCopy = JSON.parse(JSON.stringify(AdAccounts));\n\n  const initialInputState = { School: \"\", Alert: \"\" };\n  const [userInput, setUserInput] = useState(initialInputState);\n  const [alertList, setAlertList] = useLocalStorage(\"alertList\", []);\n  const [adAccounts, setAdAccounts] = useState(accountsDeepCopy);\n  const filteredAccounts = useMemo(\n    () => filterAccounts(adAccounts, alertList),\n    [alertList, adAccounts]\n  );\n\n  const date = new Date();\n  const formattedDate = date\n    .toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n    \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setAlertList([...alertList, userInput]);\n    setUserInput(initialInputState);\n  };\n\n  const handleChangeSchool = (e) => {\n    e.persist();\n    setUserInput((userInput) => ({ ...userInput, School: e.target.value }));\n  };\n\n  const handleChangeAlert = (e) => {\n    e.persist();\n    setUserInput((userInput) => ({ ...userInput, Alert: e.target.value }));\n  };\n\n  const handleAlertDelete = (alert) => {\n    setAlertList(alertList.filter((filteredAlert) => filteredAlert !== alert));\n    setAdAccounts(accountsDeepCopy);\n  };\n\n  const handleClear = () => {\n    setAlertList([]);\n    setAdAccounts(accountsDeepCopy);\n  };\n\n  const openAccountFB = (id) => {\n    const styledID = id.substring(4);\n    window.open(\n      `https://business.facebook.com/adsmanager/manage/campaigns?act=${styledID}&business_id=1783305341923072`,\n      \"_blank\"\n    );\n  };\n\n  useEffect(() => {\n    if (alertList.length === 0) setAdAccounts(accountsDeepCopy);\n    // eslint-disable-next-line\n  }, [alertList]);\n\n  return (\n    <Card className=\"mainCardAlerts\" text=\"white\">\n      <Card.Header>Alert Manager</Card.Header>\n      <Card.Body>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Row className=\"align-items-center\">\n              <Col md=\"4\" xs=\"auto\">\n                <Form.Label srOnly />\n                <Form.Control\n                  className=\"mb-2\"\n                  as=\"select\"\n                  placeholder=\"School Name\"\n                  name=\"School Name\"\n                  value={userInput.School}\n                  onChange={handleChangeSchool}\n                >\n                  <option hidden>Select School Name</option>\n                  {AlertOptions.Schools &&\n                    AlertOptions.Schools.map((i, index) => (\n                      <option key={index} value={i}>\n                        {i}\n                      </option>\n                    ))}\n                </Form.Control>\n              </Col>\n              <Col md=\"4\" xs=\"auto\">\n                <Form.Control\n                  className=\"mb-2\"\n                  as=\"select\"\n                  placeholder=\"Alert Message\"\n                  name=\"Alert Message\"\n                  value={userInput.Alert}\n                  onChange={handleChangeAlert}\n                >\n                  <option hidden>Select Alert Type</option>\n                  {AlertOptions.Alerts &&\n                    AlertOptions.Alerts.map((i, index) => (\n                      <option key={index} value={i}>\n                        {i}\n                      </option>\n                    ))}\n                </Form.Control>\n              </Col>\n              <Col xs=\"auto\">\n                <Button\n                  disabled={!(userInput.School && userInput.Alert)}\n                  type=\"submit\"\n                  className=\"mb-2\"\n                >\n                  Add\n                </Button>\n              </Col>\n              <Col xs=\"auto\">\n                <Button\n                  onClick={handleClear}\n                  disabled={!alertList.length}\n                  className=\"mb-2\"\n                  variant=\"danger\"\n                >\n                  Clear Alerts\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header>Alerts</Card.Header>\n            <Card.Body className=\"cardContainer\">\n              <ListGroup>\n                {alertList &&\n                  alertList.map((i, index) => (\n                    <ListGroup.Item\n                      className=\"d-flex\"\n                      variant=\"dark\"\n                      key={index}\n                    >\n                      <div className=\"flex-grow-1\">\n                        <Card.Subtitle>{i.School}</Card.Subtitle>\n                        <Card.Text>\n                          {i.Alert} <br/>\n                          <small className=\"text-muted\">{formattedDate}</small>\n                        </Card.Text>\n                      </div>\n                      <Button\n                        variant=\"outline-danger\"\n                        onClick={() => handleAlertDelete(i)}\n                        className=\"text-right, align-top\"\n                      >\n                        <FaRegTrashAlt />\n                      </Button>\n                    </ListGroup.Item>\n                  ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header>Affected Accounts</Card.Header>\n            <Card.Body className=\"cardContainer\">\n              {filteredAccounts &&\n                filteredAccounts.map((i, index) => (\n                  <Card bg=\"secondary\" text=\"white\" key={index}>\n                    <Card.Header className=\"d-flex align-items-center\">\n                      <div className=\"flex-grow-1\">\n                        <Card.Subtitle>\n                          {i.name}, should be turned off.\n                        </Card.Subtitle>\n                        <Card.Text>\n                          {i.backOnConditions.goesBackOn\n                            ? `Those campaigns should be turned back on at: ${i.backOnConditions.time}`\n                            : \"Those campaigns should not go back on\"}\n                        </Card.Text>\n                      </div>\n                      <Button\n                        variant=\"primary\"\n                        onClick={() => openAccountFB(i.id)}\n                        className=\"text-right, align-top\"\n                      >\n                        <GrFacebook />\n                      </Button>\n                    </Card.Header>\n                  </Card>\n                ))}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { GrFacebook } from \"react-icons/gr\";\nimport { FiFacebook } from \"react-icons/fi\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport FbTools from './pages/fbBusinessTools.js'\nimport AlertManager from './pages/alertManager.js'\n\nexport default function Homepage() {\n  return (\n    <Router>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n          <GrFacebook />\n          </Link>\n        </Navbar.Brand>\n        <Nav className=\"ml-auto\">\n            <Link className=\"nav-link\" to=\"businessTools\">Business Tools</Link>\n            <Link className=\"nav-link\" to=\"alertManager\">Alert Manager</Link>\n        </Nav>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/businessTools\">\n          <FbTools />\n        </Route>\n        <Route path=\"/alertManager\">\n          <AlertManager />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  return <FiFacebook className=\"mainLogo\" />;\n};\n","import React, { createContext, useState } from \"react\";\nimport Homepage from \"./home.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nexport const GlobalContext = createContext();\n\nconst Provider = ({ children }) => {\n  const [errorState, setErrorState] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const store = {\n    error: [errorState, setErrorState],\n    token: [accessToken, setAccessToken],\n  };\n  return (\n    <GlobalContext.Provider value={store}>{children}</GlobalContext.Provider>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <Homepage />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}