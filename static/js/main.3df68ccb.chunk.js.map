{"version":3,"sources":["components/errorModal.js","components/table.js","components/form.js","tabs/interests.js","tabs/images.js","tabs/usedImages.js","tabs/campaigns.js","main.js","App.js","serviceWorker.js","index.js"],"names":["ErrorModal","useContext","GlobalContext","error","token","errorState","setErrorState","accessToken","Modal","show","onHide","backdrop","keyboard","Alert","className","variant","onClose","dismissible","Heading","DataTable","props","columns","data","sort","caption","filter","cellEdit","rowClasses","length","bootstrap4","keyField","defaultSorted","id","InputForm","dataType","searchFields","dataSetter","labelSetter","selectOptions","savingRoutes","savedStatus","setSavedStatus","setEditedRow","useState","undefined","userInput","setUserInput","noResults","setNoResults","formattedRoutes","useMemo","map","i","status","formatPushRoutes","dataRoutes","interests","images","campaigns","handleSubmit","e","a","preventDefault","dataCall","axios","get","response","dataPush","route","post","saveData","forEach","Row","Col","xs","Form","onSubmit","md","Label","srOnly","Control","as","placeholder","name","value","onChange","target","option","nativeEvent","selectedIndex","text","hidden","key","type","Button","disabled","onClick","Badge","lg","span","offset","InterestFinder","fetchedData","setFetchedData","mappedFetched","audience","audience_size","inputLabel","setInputLabel","dataField","order","ImageFinder","AssociatedImages","url","href","use","is_associated_creatives_in_adgroups","toString","created_time","true","false","formatter","cell","selectFilter","options","filterFactory","CampaignFinder","editedRow","mappedEdited","editor","Type","SELECT","label","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","row","column","classes","indexOf","FbAPIConnect","showFBButton","setShowFBButton","userBusiness","setUserBusiness","businessAdAccounts","setBusinessAdAccounts","setAccessToken","useEffect","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","XFBML","parse","authResponse","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","then","businesses","catch","err","console","log","b","Container","fluid","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","Tabs","transition","Tab","eventKey","title","createContext","Provider","children","store","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3df68ccb.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { GlobalContext } from \"../App.js\";\n\nexport default function ErrorModal() {\n  const { error, token } = useContext(GlobalContext);\n  const [errorState, setErrorState] = error;\n  const [accessToken] = token;\n\n  return (\n    <Modal\n      show={errorState}\n      onHide={() => setErrorState(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Alert\n        className=\"mb-0\"\n        variant=\"danger\"\n        onClose={() => setErrorState(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap!</Alert.Heading>\n        {accessToken ? (\n          <p>Please verify your input or refresh the application</p>\n        ) : (\n          <p>Please authenticate with your Facebook account to continue</p>\n        )}\n      </Alert>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nexport default function DataTable(props) {\n  const { columns, data, sort, caption, filter, cellEdit, rowClasses } = props;\n\n\n  return data.length ? (\n    <BootstrapTable\n      bootstrap4\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      caption={caption}\n      defaultSorted={sort}\n      id='tableDark'\n      filter={filter}\n      cellEdit={cellEdit}\n      rowClasses={rowClasses}\n    />\n  ) : null;\n}\n","import React, { useState, useContext, useMemo } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport axios from \"axios\";\n\nconst formatPushRoutes = (data, accessToken) =>\n  data &&\n  data.map(\n    (i) =>\n      `https://graph.facebook.com/v8.0/${i.id}?status=${i.status}&access_token=${accessToken}`\n  );\n\nexport default function InputForm(props) {\n  const {\n    variant,\n    dataType,\n    searchFields,\n    dataSetter,\n    labelSetter,\n    selectOptions,\n    savingRoutes,\n    savedStatus,\n    setSavedStatus,\n    setEditedRow,\n  } = props;\n\n  const [userInput, setUserInput] = useState(undefined);\n  const [noResults, setNoResults] = useState(false);\n\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken] = token;\n\n  const formattedRoutes = useMemo(\n    () => formatPushRoutes(savingRoutes, accessToken),\n    [savingRoutes, accessToken]\n  );\n\n  const dataRoutes = {\n    interests: `https://graph.facebook.com/search?type=adinterest&q=[${userInput}]&limit=10000&locale=en_US&access_token=${accessToken}`,\n    images: `https://graph.facebook.com/v8.0/${userInput}/adimages?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n    campaigns: `https://graph.facebook.com/v8.0/${userInput}/campaigns?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dataSetter(await dataCall());\n    setUserInput(\"\");\n    if (dataType === \"interests\") {\n      labelSetter(userInput);\n    }\n  };\n\n  const handleClear = () => {\n    setErrorState(false);\n    dataSetter([]);\n    setNoResults(false);\n    setEditedRow([])\n    setSavedStatus(false);\n  };\n\n  const handleChangeText = (e) => {\n    setUserInput(e.target.value);\n    dataSetter(undefined);\n  };\n\n  const handleChangeSelect = (e) => {\n    setUserInput(e.target.value);\n    let option = e.nativeEvent.target.selectedIndex;\n    labelSetter(e.nativeEvent.target[option].text);\n    dataSetter(undefined);\n    setEditedRow([])\n    setSavedStatus(false);\n  };\n\n  const handleSave = () => {\n    saveData(formattedRoutes);\n    setSavedStatus(true);\n  };\n\n  const dataCall = async () => {\n    try {\n      const response = await axios.get(dataRoutes[dataType]);\n      !response.data.data.length ? setNoResults(true) : setNoResults(false);\n      return response.data.data;\n    } catch (err) {\n      setErrorState(true);\n    }\n  };\n\n  const dataPush = async (route) => {\n    try {\n      await axios.post(route);\n    } catch (err) {\n      setErrorState(true);\n    }\n  };\n\n  const saveData = (data) => {\n    data && data.forEach((i) => dataPush(i));\n  };\n\n  return (\n    <>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Row className=\"align-items-center\">\n              <Col md=\"4\" xs=\"auto\">\n                <Form.Label srOnly />\n                {variant === \"select\" ? (\n                  <Form.Control\n                    className=\"mb-2\"\n                    as=\"select\"\n                    placeholder=\"Ad Account ID\"\n                    name=\"adAccount\"\n                    value={userInput}\n                    onChange={handleChangeSelect}\n                  >\n                    <option hidden>Select Ad Account</option>\n                    {selectOptions &&\n                      selectOptions.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                  </Form.Control>\n                ) : (\n                  <Form.Control\n                    className=\"mb-2\"\n                    type=\"text\"\n                    placeholder=\"Ad Interest\"\n                    name=\"interest\"\n                    value={userInput || \"\"}\n                    onChange={handleChangeText}\n                  />\n                )}\n              </Col>\n              <Col xs=\"auto\">\n                <Button disabled={!userInput} type=\"submit\" className=\"mb-2\">\n                  Get Data\n                </Button>\n              </Col>\n              <Col xs=\"auto\">\n                <Button variant=\"danger\" className=\"mb-2\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Col>\n              {noResults && (\n                <Col xs=\"auto\">\n                  <h4>\n                    <Badge variant=\"danger\">No Results</Badge>\n                  </h4>\n                </Col>\n              )}\n              {formattedRoutes && formattedRoutes.length ? (\n                <Col xs=\"auto\" lg={{ span: \"auto\", offset: \"5\" }}>\n                  {savedStatus ? (\n                    <Button variant=\"success\" className=\"mb-2\">\n                      Saved!\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"info\"\n                      className=\"mb-2\"\n                      onClick={handleSave}\n                    >\n                      Save\n                    </Button>\n                  )}\n                </Col>\n              ) : null}\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    interests: `\"interests\":[{\"id\":\"${i.id}\",\"name\":\"${i.name}\"}]}`,\n    name: i.name,\n    audience: i.audience_size,\n    id: i.id,\n  }));\n\nexport default function InterestFinder() {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n      {\n        text: \"ID/Name\",\n        dataField: \"interests\",\n        sort: true,\n      },\n      {\n        text: \"Name\",\n        dataField: \"name\",\n        sort: true,\n      },\n      {\n        text: \"Audience\",\n        dataField: \"audience\",\n        sort: true,\n      },\n    ]\n\n  const defaultSorted = [\n    {\n      dataField: \"audience\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        dataType=\"interests\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results of: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function ImageFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n    {\n      text: \"Image Name\",\n      dataField: \"name\",\n      sort: true,\n    },\n    {\n      text: \"Hash\",\n      dataField: \"hash\",\n      sort: true,\n    },\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"name,id,hash\"}\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={fetchedData}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    url: <a href={i.url}>Download</a>,\n    name: i.name,\n    use: i.is_associated_creatives_in_adgroups.toString(),\n    id: i.id,\n    created_time: i.created_time,\n  }));\n\nexport default function AssociatedImages(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const selectOptions = {\n    true: \"true\",\n    false: \"false\",\n  };\n\n  const columns = [\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n    {\n      text: \"URL\",\n      dataField: \"url\",\n      sort: true,\n    },\n    {\n      text: \"Currently in use?\",\n      dataField: \"use\",\n      sort: true,\n      formatter: (cell) => selectOptions[cell],\n      filter: selectFilter({\n        options: selectOptions,\n      }),\n    },\n    {\n      text: \"Created Time\",\n      dataField: \"created_time\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"use\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\n          \"id,name,url,is_associated_creatives_in_adgroups,created_time,updated_time\"\n        }\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n              filter={filterFactory()}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) => \n    data && data.map((i) => i.id)\n\nexport default function CampaignFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Campaigns\");\n  const [editedRow, setEditedRow] = useState([]);\n  const mappedEdited = useMemo(() => mapData(editedRow), [editedRow]);\n  const [savedStatus, setSavedStatus] = useState(false)\n\n  const columns = [\n    {\n      text: \"Campaign Name\",\n      dataField: \"name\",\n      sort: true,\n    },\n    {\n      text: \"Campaign ID\",\n      dataField: \"id\",\n      sort: true,\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      editor: {\n        type: Type.SELECT,\n        options: [\n          {\n            value: \"ACTIVE\",\n            label: \"ACTIVE\",\n          },\n          {\n            value: \"PAUSED\",\n            label: \"PAUSED\",\n          },\n        ],\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"id\",\n      order: \"asc\",\n    },\n  ];\n\n\n  const rowClasses = (row) => {\n    let classes = null;\n    if (mappedEdited.indexOf(row.id) !== -1) {\n      classes = 'editedCell';\n      if (savedStatus) {\n        classes = 'savedCell'\n      } \n    }\n    \n    return classes;\n  };\n\n  const cellEdit = cellEditFactory({\n    mode: \"dbclick\",\n    blurToSave: true,\n    afterSaveCell: (oldValue, newValue, row, column) => {\n       if (oldValue !== newValue) {\n      setEditedRow([...editedRow, { id: row.id, status: newValue }])\n       }\n    },\n    \n  });\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"status,name\"}\n        dataType=\"campaigns\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n        savingRoutes={editedRow}\n        setSavedStatus={setSavedStatus}\n        savedStatus={savedStatus}\n        setEditedRow={setEditedRow}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={fetchedData}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n              cellEdit={cellEdit}\n              rowClasses={rowClasses}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"./App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ErrorModal from \"./components/errorModal.js\";\nimport InterestFinder from \"./tabs/interests.js\";\nimport ImageFinder from \"./tabs/images.js\";\nimport AssociatedImages from \"./tabs/usedImages.js\";\nimport CampaignFinder from \"./tabs/campaigns.js\";\nimport axios from \"axios\";\n\nexport default function FbAPIConnect() {\n  const [showFBButton, setShowFBButton] = useState(true);\n  const [userBusiness, setUserBusiness] = useState(undefined);\n  const [businessAdAccounts, setBusinessAdAccounts] = useState(undefined);\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken, setAccessToken] = token;\n\n  useEffect(() => {\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: \"1045150769237017\",\n        cookie: true,\n        xfbml: true,\n        version: \"v8.0\",\n      });\n\n      window.FB.AppEvents.logPageView();\n\n      window.FB.getLoginStatus((response) => {\n        if (response.status !== \"connected\") {\n          setShowFBButton(true);\n          window.FB.XFBML.parse();\n        } else {\n          setShowFBButton(false);\n          setAccessToken(response.authResponse.accessToken);\n        }\n      });\n    };\n\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n  }, [setAccessToken]);\n\n  useEffect(() => {\n    accessToken &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/me?fields=businesses&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setUserBusiness(response.data.businesses.data[0].id);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [accessToken, setErrorState]);\n\n  useEffect(() => {\n    userBusiness &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/${userBusiness}/owned_ad_accounts?fields=name&limit=500&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setBusinessAdAccounts(\n            response.data.data.sort((a, b) => (a.id > b.id ? 1 : -1))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [userBusiness, accessToken, setErrorState]);\n\n  return (\n    <>\n      <Container fluid className=\"mt-3\">\n        <Row className='mb-3'>\n          <Col xs={{ span: 4, offset: 8 }}>\n            {showFBButton ? (\n              <div\n                className=\"fb-login-button\"\n                data-size=\"small\"\n                data-button-type=\"login_with\"\n                data-layout=\"rounded\"\n                data-auto-logout-link=\"false\"\n                data-use-continue-as=\"false\"\n                data-width=\"\"\n              ></div>\n            ) : (\n              <Badge variant=\"success\">Connected to FB</Badge>\n            )}\n          </Col>\n        </Row>\n        <Tabs transition={false}>\n          <Tab eventKey=\"interests\" title=\"Interest Finder\">\n            <InterestFinder accessToken={accessToken} />\n          </Tab>\n          <Tab eventKey=\"images\" title=\"Image Finder\">\n            <ImageFinder\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"used\" title=\"Assets in Use\">\n            <AssociatedImages\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"campaigns\" title=\"Campaigns\">\n            <CampaignFinder\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n        </Tabs>\n      </Container>\n      <ErrorModal />\n    </>\n  );\n}\n","import React, { createContext, useState } from \"react\";\nimport FbAPIConnect from \"./main.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nexport const GlobalContext = createContext();\n\nconst Provider = ({ children }) => {\n  const [errorState, setErrorState] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const store = {\n    error: [errorState, setErrorState],\n    token: [accessToken, setAccessToken],\n  };\n  return (\n    <GlobalContext.Provider value={store}>{children}</GlobalContext.Provider>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <FbAPIConnect />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}