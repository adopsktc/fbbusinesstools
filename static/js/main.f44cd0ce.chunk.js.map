{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/errorModal.js","components/table.js","components/form.js","mainTools/interests.js","mainTools/images.js","mainTools/usedImages.js","pages/fbBusinessTools.js","aws-exports.js","pages/alertManager.js","graphql/queries.js","graphql/mutations.js","home.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","ErrorModal","useContext","GlobalContext","error","token","errorState","setErrorState","accessToken","Modal","show","onHide","backdrop","keyboard","Alert","className","variant","onClose","dismissible","Heading","DataTable","props","columns","data","sort","caption","filter","length","bootstrap4","keyField","defaultSorted","InputForm","dataType","searchFields","dataSetter","labelSetter","selectOptions","useState","undefined","userInput","setUserInput","noResults","setNoResults","dataRoutes","interests","images","campaigns","handleSubmit","a","preventDefault","dataCall","axios","get","response","Row","Col","xs","Form","onSubmit","md","Label","srOnly","Control","as","placeholder","name","value","onChange","target","option","nativeEvent","selectedIndex","text","hidden","i","key","type","Button","disabled","onClick","Badge","InterestFinder","fetchedData","setFetchedData","mappedFetched","useMemo","audience","audience_size","inputLabel","setInputLabel","dataField","order","ImageFinder","AssociatedImages","url","href","use","is_associated_creatives_in_adgroups","toString","created_time","true","false","formatter","cell","selectFilter","options","filterFactory","FbTools","currentLocation","userBusiness","setUserBusiness","businessAdAccounts","setBusinessAdAccounts","setAccessToken","useEffect","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","status","XFBML","parse","authResponse","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","businesses","catch","err","console","log","b","Container","fluid","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","Tabs","transition","Tab","eventKey","title","awsconfig","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","Amplify","configure","AlertManager","accountsDeepCopy","JSON","stringify","AdAccounts","initialInputState","School","Date","modalShow","setModalShow","alertList","setAlertList","checkedAccounts","setCheckedAccounts","mappedChecked","accountID","adAccounts","setAdAccounts","filteredAccounts","alerts","f","offConditions","acc","matchCount","cumulativeCount","x","some","backOnConditions","criteria","currentStatus","goesBackOn","matchCheckDeep","minimumMatches","matchCheck","date","formattedDate","toDateString","processFetchedData","mapped","ts","substr","indexOf","replace","split","trim","formatSlackAlert","parseInt","getSlackMessages","messages","getCheckedAccounts","API","graphql","graphqlOperation","list","listCheckedAccounts","items","addCheckedAccount","checked","input","removeCheckedAccount","handleCheck","includes","handlePullMessages","fetchData","Card","Header","Body","persist","AlertOptions","Schools","index","Alerts","lg","bg","ListGroup","Item","Subtitle","Text","alert","time","styledID","substring","open","openAccountFB","Homepage","useLocation","Navbar","Brand","to","Nav","exact","path","pathname","Home","AmplifyTheme","button","backgroundColor","borderColor","createContext","Provider","children","store","App","authState","setAuthState","user","setUser","onAuthUIStateChange","nextAuthState","authData","AuthState","SignedIn","usernameAlias","theme","slot","hideSignUp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f44cd0ce.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t387,\n\t\t16\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t388,\n\t\t17\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t389,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t390,\n\t\t18\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t391,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t392,\n\t\t19\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t393,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t394,\n\t\t20\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t395,\n\t\t21\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t396,\n\t\t22\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t397,\n\t\t23\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t398,\n\t\t24\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t399,\n\t\t25\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t400,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t401,\n\t\t26\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t402,\n\t\t27\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t403,\n\t\t28\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t404,\n\t\t29\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t405,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t406,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t407,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t408,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t409,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t410,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t411,\n\t\t30\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t412,\n\t\t14\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t413,\n\t\t31\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t414,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 381;\nmodule.exports = webpackAsyncContext;","import React, { useContext } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { GlobalContext } from \"../App.js\";\n\nexport default function ErrorModal() {\n  const { error, token } = useContext(GlobalContext);\n  const [errorState, setErrorState] = error;\n  const [accessToken] = token;\n\n  return (\n    <Modal\n      show={errorState}\n      onHide={() => setErrorState(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Alert\n        className=\"mb-0\"\n        variant=\"danger\"\n        onClose={() => setErrorState(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap!</Alert.Heading>\n        {accessToken ? (\n          <p>Please verify your input or refresh the application</p>\n        ) : (\n          <p>Please authenticate with your Facebook account to continue</p>\n        )}\n      </Alert>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nexport default function DataTable(props) {\n  const { columns, data, sort, caption, filter } = props;\n\n\n  return data.length ? (\n    <BootstrapTable\n      bootstrap4\n      keyField=\"id\"\n      data={data}\n      columns={columns}\n      caption={caption}\n      defaultSorted={sort}\n      id='tableDark'\n      filter={filter}\n    />\n  ) : null;\n}\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport axios from \"axios\";\n\nexport default function InputForm(props) {\n  const {\n    variant,\n    dataType,\n    searchFields,\n    dataSetter,\n    labelSetter,\n    selectOptions,\n  } = props;\n\n  const [userInput, setUserInput] = useState(undefined);\n  const [noResults, setNoResults] = useState(false);\n\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken] = token;\n\n  const dataRoutes = {\n    interests: `https://graph.facebook.com/search?type=adinterest&q=[${userInput}]&limit=10000&locale=en_US&access_token=${accessToken}`,\n    images: `https://graph.facebook.com/v8.0/${userInput}/adimages?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n    campaigns: `https://graph.facebook.com/v8.0/${userInput}/campaigns?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dataSetter(await dataCall());\n    setUserInput(\"\");\n    if (dataType === \"interests\") {\n      labelSetter(userInput);\n    }\n  };\n\n  const handleClear = () => {\n    setErrorState(false);\n    dataSetter([]);\n    setNoResults(false);\n  };\n\n  const handleChangeText = (e) => {\n    setUserInput(e.target.value);\n    dataSetter(undefined);\n  };\n\n  const handleChangeSelect = (e) => {\n    setUserInput(e.target.value);\n    let option = e.nativeEvent.target.selectedIndex;\n    labelSetter(e.nativeEvent.target[option].text);\n    dataSetter(undefined);\n  };\n\n  const dataCall = async () => {\n    try {\n      const response = await axios.get(dataRoutes[dataType]);\n      !response.data.data.length ? setNoResults(true) : setNoResults(false);\n      return response.data.data;\n    } catch (err) {\n      setErrorState(true);\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"mt-3\">\n        <Col xs=\"12\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Row className=\"align-items-center\">\n              <Col md=\"4\" xs=\"auto\">\n                <Form.Label srOnly />\n                {variant === \"select\" ? (\n                  <Form.Control\n                    className=\"mb-2\"\n                    as=\"select\"\n                    placeholder=\"Ad Account ID\"\n                    name=\"adAccount\"\n                    value={userInput}\n                    onChange={handleChangeSelect}\n                  >\n                    <option hidden>Select Ad Account</option>\n                    {selectOptions &&\n                      selectOptions.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                  </Form.Control>\n                ) : (\n                  <Form.Control\n                    className=\"mb-2\"\n                    type=\"text\"\n                    placeholder=\"Ad Interest\"\n                    name=\"interest\"\n                    value={userInput || \"\"}\n                    onChange={handleChangeText}\n                  />\n                )}\n              </Col>\n              <Col xs=\"auto\">\n                <Button disabled={!userInput} type=\"submit\" className=\"mb-2\">\n                  Get Data\n                </Button>\n              </Col>\n              <Col xs=\"auto\">\n                <Button variant=\"danger\" className=\"mb-2\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Col>\n              {noResults && (\n                <Col xs=\"auto\">\n                  <h4>\n                    <Badge variant=\"danger\">No Results</Badge>\n                  </h4>\n                </Col>\n              )}\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    interests: `\"interests\":[{\"id\":\"${i.id}\",\"name\":\"${i.name}\"}]}`,\n    name: i.name,\n    audience: i.audience_size,\n    id: i.id,\n  }));\n\nexport default function InterestFinder() {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n      {\n        text: \"ID/Name\",\n        dataField: \"interests\",\n        sort: true,\n      },\n      {\n        text: \"Name\",\n        dataField: \"name\",\n        sort: true,\n      },\n      {\n        text: \"Audience\",\n        dataField: \"audience\",\n        sort: true,\n      },\n    ]\n\n  const defaultSorted = [\n    {\n      dataField: \"audience\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        dataType=\"interests\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results of: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function ImageFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = [\n    {\n      text: \"Image Name\",\n      dataField: \"name\",\n      sort: true,\n    },\n    {\n      text: \"Hash\",\n      dataField: \"hash\",\n      sort: true,\n    },\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"name,id,hash\"}\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={fetchedData}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    url: <a href={i.url}>Download</a>,\n    name: i.name,\n    use: i.is_associated_creatives_in_adgroups.toString(),\n    id: i.id,\n    created_time: i.created_time,\n  }));\n\nexport default function AssociatedImages(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const selectOptions = {\n    true: \"true\",\n    false: \"false\",\n  };\n\n  const columns = [\n    {\n      text: \"ID (Account + Hash)\",\n      dataField: \"id\",\n      sort: true,\n    },\n    {\n      text: \"URL\",\n      dataField: \"url\",\n      sort: true,\n    },\n    {\n      text: \"Currently in use?\",\n      dataField: \"use\",\n      sort: true,\n      formatter: (cell) => selectOptions[cell],\n      filter: selectFilter({\n        options: selectOptions,\n      }),\n    },\n    {\n      text: \"Created Time\",\n      dataField: \"created_time\",\n      sort: true,\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"use\",\n      order: \"desc\",\n    },\n  ];\n\n  return (\n    <>\n      <InputForm\n        searchFields={\n          \"id,name,url,is_associated_creatives_in_adgroups,created_time,updated_time\"\n        }\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && (\n            <DataTable\n              columns={columns}\n              data={mappedFetched}\n              sort={defaultSorted}\n              caption={`Displaying results for: ${inputLabel}`}\n              filter={filterFactory()}\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ErrorModal from \"../components/errorModal.js\";\nimport InterestFinder from \"../mainTools/interests.js\";\nimport ImageFinder from \"../mainTools/images.js\";\nimport AssociatedImages from \"../mainTools/usedImages.js\";\nimport axios from \"axios\";\n\nexport default function FbTools(props) {\n  const { currentLocation } = props;\n  const [userBusiness, setUserBusiness] = useState(undefined);\n  const [businessAdAccounts, setBusinessAdAccounts] = useState(undefined);\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken, setAccessToken] = token;\n\n  useEffect(() => {\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: \"1045150769237017\",\n        cookie: true,\n        xfbml: true,\n        version: \"v8.0\",\n      });\n\n      window.FB.AppEvents.logPageView();\n\n      window.FB.getLoginStatus((response) => {\n        if (response.status !== \"connected\") {\n          window.FB.XFBML.parse();\n        } else {\n          setAccessToken(response.authResponse.accessToken);\n        }\n      });\n    };\n\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n  }, [currentLocation, setAccessToken]);\n\n  useEffect(() => {\n    accessToken &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/me?fields=businesses&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setUserBusiness(response.data.businesses.data[0].id);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [accessToken, setErrorState]);\n\n  useEffect(() => {\n    userBusiness &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/${userBusiness}/owned_ad_accounts?fields=name&limit=500&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setBusinessAdAccounts(\n            response.data.data.sort((a, b) => (a.id > b.id ? 1 : -1))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [userBusiness, accessToken, setErrorState]);\n\n  return (\n    <>\n      <Container fluid className=\"mt-3\">\n        <Row className=\"mb-3\">\n          <Col>\n            {!accessToken ? (\n              <div\n                className=\"fb-login-button\"\n                data-size=\"small\"\n                data-button-type=\"login_with\"\n                data-layout=\"rounded\"\n                data-auto-logout-link=\"false\"\n                data-use-continue-as=\"false\"\n                data-width=\"\"\n              ></div>\n            ) : (\n              <Badge variant=\"success\">Connected to FB</Badge>\n            )}\n          </Col>\n        </Row>\n        <Tabs transition={false}>\n          <Tab eventKey=\"interests\" title=\"Interest Finder\">\n            <InterestFinder accessToken={accessToken} />\n          </Tab>\n          <Tab eventKey=\"images\" title=\"Image Finder\">\n            <ImageFinder\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"used\" title=\"Assets in Use\">\n            <AssociatedImages\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n        </Tabs>\n      </Container>\n      <ErrorModal />\n    </>\n  );\n}\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsconfig = {\n  aws_project_region: \"us-east-1\",\n  aws_cognito_identity_pool_id:\n    \"us-east-1:615a774c-682f-4bdf-9e81-ea3e9d519761\",\n  aws_cognito_region: \"us-east-1\",\n  aws_user_pools_id: \"us-east-1_CPkhDEEIg\",\n  aws_user_pools_web_client_id: \"7e5essuokd7p7l29ruf6jdoht9\",\n  oauth: {},\n  aws_appsync_graphqlEndpoint:\n    \"https://qonybhui7zbujfgzpolrfcd2ta.appsync-api.us-east-1.amazonaws.com/graphql\",\n  aws_appsync_region: \"us-east-1\",\n  aws_appsync_authenticationType: \"AMAZON_COGNITO_USER_POOLS\",\n};\n\nexport default awsconfig;\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { GrFacebook } from \"react-icons/gr\";\nimport { GrRefresh } from \"react-icons/gr\";\nimport { RiCheckFill } from \"react-icons/ri\";\nimport { CgClose } from \"react-icons/cg\";\nimport { AlertOptions } from \"../data/alertOptions.json\";\nimport { AdAccounts } from \"../data/adAccountData.json\";\nimport axios from \"axios\";\nimport * as queries from \"../graphql/queries\";\nimport * as mutations from \"../graphql/mutations\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport awsconfig from \"../aws-exports.js\";\n\nAmplify.configure(awsconfig);\n\nconst matchCheck = (acc, alerts) => {\n  let matchCount = 0;\n  for (let i = 0; i < acc.offConditions.length; i++) {\n    if (\n      alerts &&\n      alerts.some(\n        (e) =>\n          e.School === acc.offConditions[i].School &&\n          e.Alert === acc.offConditions[i].Alert\n      )\n    ) {\n      matchCount++;\n      if (\n        acc.backOnConditions.criteria &&\n        alerts.some(\n          (e) =>\n            e.School === acc.backOnConditions.criteria.School &&\n            e.Alert === acc.backOnConditions.criteria.Alert\n        ) &&\n        acc.currentStatus === \"On\"\n      ) {\n        acc.backOnConditions.goesBackOn = true;\n      }\n      acc.currentStatus = \"Off\";\n    }\n  }\n  return matchCount;\n};\n\nconst matchCheckDeep = (acc, alerts) => {\n  let matchCount = 0;\n  let cumulativeCount = 0;\n  for (let i = 0; i < acc.offConditions.length; i++) {\n    for (let x = 0; x < acc.offConditions[i].length; x++) {\n      if (\n        alerts &&\n        alerts.some(\n          (e) =>\n            e.School === acc.offConditions[i][x].School &&\n            e.Alert === acc.offConditions[i][x].Alert\n        )\n      ) {\n        matchCount++;\n      }\n    }\n    if (matchCount === 2) {\n      cumulativeCount++;\n      if (\n        acc.backOnConditions.criteria &&\n        alerts.some(\n          (e) =>\n            e.School === acc.backOnConditions.criteria.School &&\n            e.Alert === acc.backOnConditions.criteria.Alert\n        ) &&\n        acc.currentStatus === \"On\"\n      ) {\n        acc.backOnConditions.goesBackOn = true;\n      }\n      acc.currentStatus = \"Off\";\n    }\n    matchCount = 0;\n  }\n  return cumulativeCount;\n};\n\nconst filterAccounts = (accounts, alerts) =>\n  accounts.filter((f) =>\n    f.offConditions.length > 2\n      ? matchCheckDeep(f, alerts) >= f.minimumMatches\n      : matchCheck(f, alerts) >= f.minimumMatches\n  );\n\nexport default function AlertManager() {\n  const accountsDeepCopy = JSON.parse(JSON.stringify(AdAccounts));\n\n  const initialInputState = { School: \"\", Alert: \"\", Date: \"\" };\n  const [modalShow, setModalShow] = useState(false);\n  const [userInput, setUserInput] = useState(initialInputState);\n  const [alertList, setAlertList] = useState([]);\n  const [checkedAccounts, setCheckedAccounts] = useState();\n  const mappedChecked = useMemo(\n    () => checkedAccounts && checkedAccounts.map((i) => i.accountID),\n    [checkedAccounts]\n  );\n  const [adAccounts, setAdAccounts] = useState(accountsDeepCopy);\n  const filteredAccounts = useMemo(\n    () => filterAccounts(adAccounts, alertList),\n    [alertList, adAccounts]\n  );\n\n  // Data processing methods\n\n  const date = new Date();\n  const formattedDate = date.toDateString();\n\n  const formatTS = (ts) => {\n    let converted = new Date(parseInt(ts) * 1000);\n    return converted.toDateString();\n  };\n\n  const formatSlackAlert = (text) => {\n    let School = text.substr(0, text.indexOf(\":\")).replace(/\\*/g, \"\");\n    let Alert = text.split(\"Daily Status `ONHOLD` - \")[1] || \"\";\n    if (text.indexOf(\"OVERCAP\") !== -1)\n      Alert = \"Group WordTrap: Lead is OVERCAP\";\n    return {\n      School: School,\n      Alert: Alert.replace(/ *\\([^)]*\\) */g, \"\").trim(),\n    };\n  };\n\n  const processFetchedData = (data) => {\n    const mapped =\n      data &&\n      data\n        .map((i) => {\n          const text = formatSlackAlert(i.text);\n          return {\n            School: text.School,\n            Alert: text.Alert,\n            Date: formatTS(i.ts),\n          };\n        })\n        .filter(\n          (i) =>\n            i.Date === date.toDateString() &&\n            (i.Alert.indexOf(\"Daily\") !== -1 ||\n              i.Alert.indexOf(\"OVERCAP\") !== -1)\n        );\n    setAlertList(mapped);\n  };\n\n  //API data pull\n\n  const getSlackMessages = async () => {\n    setModalShow(true);\n    try {\n      const response = await axios.get(\"api/getconvo\");\n      return response.data.messages || [1];\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setModalShow(false);\n    }\n  };\n\n  //Db DataPull\n\n  const getCheckedAccounts = async () => {\n    try {\n      const list = await API.graphql(\n        graphqlOperation(queries.listCheckedAccounts)\n      );\n      setCheckedAccounts(list.data.listCheckedAccounts.items);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Misc utils\n\n  const openAccountFB = (id) => {\n    const styledID = id.substring(4);\n    window.open(\n      `https://business.facebook.com/adsmanager/manage/campaigns?act=${styledID}&business_id=1783305341923072`,\n      \"_blank\"\n    );\n  };\n\n  const addCheckedAccount = async (id) => {\n    const checked = { accountID: id, id: id };\n    return await API.graphql(\n      graphqlOperation(mutations.createCheckedAccount, { input: checked })\n    );\n  };\n\n  const removeCheckedAccount = async (id) => {\n    try {\n      const target = { id: id };\n      return await API.graphql(\n        graphqlOperation(mutations.deleteCheckedAccount, { input: target })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //Event Handlers\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setAlertList([...alertList, userInput]);\n    setUserInput(initialInputState);\n  };\n\n  const handleChangeSchool = (e) => {\n    e.persist();\n    setUserInput((userInput) => ({\n      ...userInput,\n      School: e.target.value,\n      Date: formattedDate,\n    }));\n  };\n\n  const handleChangeAlert = (e) => {\n    e.persist();\n    setUserInput((userInput) => ({ ...userInput, Alert: e.target.value }));\n  };\n\n  const handleAlertDelete = (alert) => {\n    setAlertList(alertList.filter((f) => f !== alert));\n    setAdAccounts(accountsDeepCopy);\n  };\n\n  const handleClear = () => {\n    setAlertList([]);\n    setAdAccounts(accountsDeepCopy);\n    setCheckedAccounts([]);\n  };\n\n  const handleCheck = (id) => {\n    if (mappedChecked.includes(id)) {\n      setCheckedAccounts(checkedAccounts.filter((i) => i.id !== id));\n      removeCheckedAccount(id);\n    } else {\n      setCheckedAccounts([...checkedAccounts, { id: id, accountID: id }]);\n      addCheckedAccount(id);\n    }\n  };\n\n  const handlePullMessages = async () => {\n    setAlertList([]);\n    processFetchedData(await getSlackMessages());\n  };\n\n  //Effects\n\n  useEffect(() => {\n    async function fetchData() {\n      processFetchedData(await getSlackMessages());\n      getCheckedAccounts();\n    }\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (alertList.length === 0) {\n      setAdAccounts(accountsDeepCopy);\n      setCheckedAccounts([]);\n    }\n    // eslint-disable-next-line\n  }, [alertList]);\n\n  return (\n    <>\n      <Card className=\"mainCardAlerts\" text=\"white\">\n        <Card.Header>\n          <Row className=\"d-flex justify-content-between\">\n            <Col xs=\"auto\">\n              <h4>Alert Manager</h4>\n            </Col>\n            <Col xs=\"auto\">\n              <Row>\n                <Col className=\"px-1\">\n                  <Button\n                    onClick={handlePullMessages}\n                    className=\"mb-2\"\n                    variant=\"info\"\n                  >\n                    <GrRefresh />\n                  </Button>\n                </Col>\n                <Col className=\"px-1\">\n                  <Button\n                    onClick={handleClear}\n                    disabled={alertList && !alertList.length}\n                    className=\"mb-2\"\n                    variant=\"danger\"\n                  >\n                    <FaRegTrashAlt />\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <Row className=\"mt-3\">\n            <Col xs=\"12\">\n              <Form onSubmit={handleSubmit}>\n                <Form.Row className=\"align-items-center\">\n                  <Col md=\"3\" xs=\"auto\">\n                    <Form.Label srOnly />\n                    <Form.Control\n                      className=\"mb-2\"\n                      as=\"select\"\n                      placeholder=\"School Name\"\n                      name=\"School Name\"\n                      value={userInput.School}\n                      onChange={handleChangeSchool}\n                    >\n                      <option hidden>Select School Name</option>\n                      {AlertOptions.Schools &&\n                        AlertOptions.Schools.map((i, index) => (\n                          <option key={index} value={i}>\n                            {i}\n                          </option>\n                        ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md=\"3\" xs=\"auto\">\n                    <Form.Control\n                      className=\"mb-2\"\n                      as=\"select\"\n                      placeholder=\"Alert Message\"\n                      name=\"Alert Message\"\n                      value={userInput.Alert}\n                      onChange={handleChangeAlert}\n                    >\n                      <option hidden>Select Alert Type</option>\n                      {AlertOptions.Alerts &&\n                        AlertOptions.Alerts.map((i, index) => (\n                          <option key={index} value={i}>\n                            {i}\n                          </option>\n                        ))}\n                    </Form.Control>\n                  </Col>\n                  <Col xs=\"auto\">\n                    <Button\n                      disabled={!(userInput.School && userInput.Alert)}\n                      type=\"submit\"\n                      className=\"mb-2\"\n                    >\n                      Add\n                    </Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col lg=\"6\" xs=\"12\">\n              <Card bg=\"dark\" text=\"white\">\n                <Card.Header as=\"h5\">Alerts</Card.Header>\n                <Card.Body>\n                  <ListGroup>\n                    {alertList &&\n                      alertList.map((i, index) => (\n                        <ListGroup.Item\n                          className=\"d-flex align-items-center\"\n                          variant=\"dark\"\n                          key={index}\n                        >\n                          <div className=\"flex-grow-1\">\n                            <Card.Subtitle>{i.School}</Card.Subtitle>\n                            <Card.Text>\n                              {i.Alert} <br />\n                              <small className=\"text-muted\">{i.Date}</small>\n                            </Card.Text>\n                          </div>\n                          <Button\n                            variant=\"outline-danger\"\n                            onClick={() => handleAlertDelete(i)}\n                          >\n                            <FaRegTrashAlt />\n                          </Button>\n                        </ListGroup.Item>\n                      ))}\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col lg=\"6\" xs=\"12\">\n              <Card bg=\"dark\" text=\"white\">\n                <Card.Header as=\"h5\">Affected Accounts</Card.Header>\n                <Card.Body>\n                  {filteredAccounts &&\n                    filteredAccounts.map((i) => (\n                      <Card\n                        bg={\n                          mappedChecked.includes(i.id) ? \"success\" : \"secondary\"\n                        }\n                        text=\"white\"\n                        key={i.id}\n                      >\n                        <Card.Header className=\"d-flex align-items-center\">\n                          <div className=\"flex-grow-1\">\n                            <Card.Subtitle>\n                              {i.name}, should be turned off.\n                            </Card.Subtitle>\n                            <Card.Text>\n                              {i.backOnConditions.goesBackOn\n                                ? `Those campaigns should be turned back on at: ${i.backOnConditions.time}`\n                                : \"Those campaigns should not go back on\"}\n                            </Card.Text>\n                          </div>\n                          <Button\n                            variant=\"primary\"\n                            onClick={() => openAccountFB(i.id)}\n                            className=\"text-right, align-top\"\n                          >\n                            <GrFacebook />\n                          </Button>\n                          {mappedChecked.includes(i.id) ? (\n                            <Button\n                              variant=\"outline-danger\"\n                              className=\"ml-2\"\n                              onClick={() => handleCheck(i.id)}\n                            >\n                              <CgClose />\n                            </Button>\n                          ) : (\n                            <Button\n                              variant=\"outline-success\"\n                              className=\"ml-2\"\n                              onClick={() => handleCheck(i.id)}\n                            >\n                              <RiCheckFill />\n                            </Button>\n                          )}\n                        </Card.Header>\n                      </Card>\n                    ))}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      <Modal show={modalShow} backdrop=\"static\" keyboard={false}>\n        <Modal.Body>Getting Alerts...</Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getCheckedAccount = /* GraphQL */ `\n  query GetCheckedAccount($id: ID!) {\n    getCheckedAccount(id: $id) {\n      id\n      accountID\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listCheckedAccounts = /* GraphQL */ `\n  query ListCheckedAccounts(\n    $filter: ModelcheckedAccountFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listCheckedAccounts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        accountID\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getAlertItem = /* GraphQL */ `\n  query GetAlertItem($id: ID!) {\n    getAlertItem(id: $id) {\n      id\n      Alert\n      School\n      Date\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listAlertItems = /* GraphQL */ `\n  query ListAlertItems(\n    $filter: ModelalertItemFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAlertItems(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        Alert\n        School\n        Date\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createCheckedAccount = /* GraphQL */ `\n  mutation CreateCheckedAccount(\n    $input: CreateCheckedAccountInput!\n    $condition: ModelcheckedAccountConditionInput\n  ) {\n    createCheckedAccount(input: $input, condition: $condition) {\n      id\n      accountID\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateCheckedAccount = /* GraphQL */ `\n  mutation UpdateCheckedAccount(\n    $input: UpdateCheckedAccountInput!\n    $condition: ModelcheckedAccountConditionInput\n  ) {\n    updateCheckedAccount(input: $input, condition: $condition) {\n      id\n      accountID\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteCheckedAccount = /* GraphQL */ `\n  mutation DeleteCheckedAccount(\n    $input: DeleteCheckedAccountInput!\n    $condition: ModelcheckedAccountConditionInput\n  ) {\n    deleteCheckedAccount(input: $input, condition: $condition) {\n      id\n      accountID\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const createAlertItem = /* GraphQL */ `\n  mutation CreateAlertItem(\n    $input: CreateAlertItemInput!\n    $condition: ModelalertItemConditionInput\n  ) {\n    createAlertItem(input: $input, condition: $condition) {\n      id\n      Alert\n      School\n      Date\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const updateAlertItem = /* GraphQL */ `\n  mutation UpdateAlertItem(\n    $input: UpdateAlertItemInput!\n    $condition: ModelalertItemConditionInput\n  ) {\n    updateAlertItem(input: $input, condition: $condition) {\n      id\n      Alert\n      School\n      Date\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const deleteAlertItem = /* GraphQL */ `\n  mutation DeleteAlertItem(\n    $input: DeleteAlertItemInput!\n    $condition: ModelalertItemConditionInput\n  ) {\n    deleteAlertItem(input: $input, condition: $condition) {\n      id\n      Alert\n      School\n      Date\n      createdAt\n      updatedAt\n    }\n  }\n`;\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { GrFacebook } from \"react-icons/gr\";\nimport { FiFacebook } from \"react-icons/fi\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport FbTools from \"./pages/fbBusinessTools.js\";\nimport AlertManager from \"./pages/alertManager.js\";\n\nexport default function Homepage() {\n  const currentLocation = useLocation();\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <GrFacebook />\n          </Link>\n        </Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Link className=\"nav-link\" to=\"businessTools\">\n            Business Tools\n          </Link>\n          <Link className=\"nav-link\" to=\"alertManager\">\n            Alert Manager\n          </Link>\n        </Nav>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/businessTools\">\n          <FbTools currentLocation={currentLocation.pathname} />\n        </Route>\n        <Route path=\"/alertManager\">\n          <AlertManager />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nconst Home = () => {\n  return <FiFacebook className=\"mainLogo\" />;\n};\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport Homepage from \"./home.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport Amplify from \"aws-amplify\";\nimport {\n  AmplifyAuthenticator,\n  AmplifySignOut,\n  AmplifySignIn,\n} from \"@aws-amplify/ui-react\";\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\";\nimport awsconfig from \"./aws-exports.js\";\n\nAmplify.configure(awsconfig);\n\nconst AmplifyTheme = {\n  button: { backgroundColor: \"red\", borderColor: \"red\" },\n};\n\nexport const GlobalContext = createContext();\n\nconst Provider = ({ children }) => {\n  const [errorState, setErrorState] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const store = {\n    error: [errorState, setErrorState],\n    token: [accessToken, setAccessToken],\n  };\n  return (\n    <GlobalContext.Provider value={store}>{children}</GlobalContext.Provider>\n  );\n};\n\nconst App = () => {\n  const [authState, setAuthState] = useState();\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      setAuthState(nextAuthState);\n      setUser(authData);\n    });\n  }, []);\n\n  return authState === AuthState.SignedIn && user ? (\n    <>\n      <Provider>\n        <div className=\"App\">\n          <Router>\n            <Homepage />\n          </Router>\n        </div>\n      </Provider>\n      <AmplifySignOut />\n    </>\n  ) : (\n    <AmplifyAuthenticator usernameAlias=\"email\">\n      <AmplifySignIn\n        theme={AmplifyTheme}\n        slot=\"sign-in\"\n        hideSignUp\n        usernameAlias=\"email\"\n      />\n    </AmplifyAuthenticator>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}