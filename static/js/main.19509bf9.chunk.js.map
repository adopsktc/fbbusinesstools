{"version":3,"sources":["components/errorModal.js","components/table.js","components/form.js","tabs/interests.js","tabs/images.js","tabs/usedImages.js","tabs/campaigns.js","main.js","App.js","serviceWorker.js","index.js"],"names":["ErrorModal","useContext","GlobalContext","error","token","errorState","setErrorState","accessToken","Modal","show","onHide","backdrop","keyboard","Alert","className","variant","onClose","dismissible","Heading","DataTable","props","columns","data","filterTypes","useMemo","text","rows","id","filterValue","filter","row","rowValue","values","undefined","String","toLowerCase","startsWith","defaultColumn","Filter","SelectColumnFilter","column","setFilter","preFilteredRows","options","Set","forEach","add","value","onChange","e","target","map","option","i","key","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","length","Table","responsive","striped","bordered","hover","headerGroup","uuidv4","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canFilter","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","InputForm","dataType","searchFields","dataSetter","labelSetter","selectOptions","useState","userInput","setUserInput","noResults","setNoResults","dataRoutes","interests","images","campaigns","handleSubmit","a","preventDefault","dataCall","axios","get","response","Row","Col","md","xs","Form","onSubmit","Label","srOnly","Control","as","placeholder","name","nativeEvent","selectedIndex","hidden","type","Button","disabled","onClick","Badge","display","InterestFinder","fetchedData","setFetchedData","mappedFetched","audience","audience_size","inputLabel","setInputLabel","Header","accessor","disableFilters","ImageFinder","AssociatedImages","d","href","url","is_associated_creatives_in_adgroups","toString","FbAPIConnect","showFBButton","setShowFBButton","userBusiness","setUserBusiness","businessAdAccounts","setBusinessAdAccounts","setAccessToken","useEffect","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","status","XFBML","parse","authResponse","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","then","businesses","catch","err","console","log","sort","b","Container","fluid","span","offset","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","Tabs","transition","Tab","eventKey","title","createContext","Provider","children","store","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.19509bf9.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { GlobalContext } from \"../App.js\";\n\nexport default function ErrorModal() {\n  const { error, token } = useContext(GlobalContext);\n  const [errorState, setErrorState] = error;\n  const [accessToken] = token;\n\n  return (\n    <Modal\n      show={errorState}\n      onHide={() => setErrorState(false)}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Alert\n        className=\"mb-0\"\n        variant=\"danger\"\n        onClose={() => setErrorState(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap!</Alert.Heading>\n        {accessToken ? (\n          <p>Please verify your input or refresh the application</p>\n        ) : (\n          <p>Please authenticate with your Facebook account to continue</p>\n        )}\n      </Alert>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from \"react-table\";\n\nexport default function DataTable(props) {\n  const { columns, data } = props;\n\n  const filterTypes = useMemo(\n    () => ({\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = useMemo(\n    () => ({\n      Filter: SelectColumnFilter,\n    }),\n    []\n  );\n\n  function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id },\n  }) {\n    const options = useMemo(() => {\n      const options = new Set();\n      preFilteredRows.forEach((row) => {\n        options.add(row.values[id]);\n      });\n      return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    return (\n      <select\n        value={filterValue}\n        onChange={(e) => {\n          setFilter(e.target.value || undefined);\n        }}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy\n  );\n\n  return data.length ? (\n    <>\n      <Table\n        responsive\n        striped\n        bordered\n        hover\n        variant=\"dark\"\n        {...getTableProps()}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr key={uuidv4()} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  ) : null;\n}\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport axios from \"axios\";\n\nexport default function InputForm(props) {\n  const {\n    variant,\n    dataType,\n    searchFields,\n    dataSetter,\n    labelSetter,\n    selectOptions,\n  } = props;\n\n  const [userInput, setUserInput] = useState(undefined);\n  const [noResults, setNoResults] = useState(false);\n\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken] = token;\n\n  const dataRoutes = {\n    interests: `https://graph.facebook.com/search?type=adinterest&q=[${userInput}]&limit=10000&locale=en_US&access_token=${accessToken}`,\n    images: `https://graph.facebook.com/v8.0/${userInput}/adimages?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n    campaigns: `https://graph.facebook.com/v8.0/${userInput}/campaigns?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dataSetter(await dataCall());\n    setUserInput(\"\");\n    if (dataType === \"interests\") {\n      labelSetter(userInput);\n    }\n  };\n\n  const handleClear = () => {\n    setErrorState(false);\n    dataSetter([]);\n    setNoResults(false);\n  };\n\n  const handleChangeText = (e) => {\n    setUserInput(e.target.value);\n    dataSetter(undefined);\n  };\n\n  const handleChangeSelect = (e) => {\n    setUserInput(e.target.value);\n    let option = e.nativeEvent.target.selectedIndex;\n    labelSetter(e.nativeEvent.target[option].text);\n    dataSetter(undefined);\n  };\n\n  const dataCall = async () => {\n    try {\n      const response = await axios.get(dataRoutes[dataType]);\n      if (!response.data.data.length) {\n        setNoResults(true);\n      }\n      return response.data.data;\n    } catch (err) {\n      setErrorState(true);\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"mt-3\">\n        <Col md=\"4\" xs=\"12\">\n          <Form onSubmit={handleSubmit}>\n            <Form.Row className=\"align-items-center\">\n              <Col>\n                <Form.Label srOnly />\n                {variant === \"select\" ? (\n                  <Form.Control\n                    className=\"mb-2\"\n                    as=\"select\"\n                    placeholder=\"Ad Account ID\"\n                    name=\"adAccount\"\n                    value={userInput}\n                    onChange={handleChangeSelect}\n                  >\n                    <option hidden>Select Ad Account</option>\n                    {selectOptions &&\n                      selectOptions.map((i) => (\n                        <option key={i.id} value={i.id}>\n                          {i.name}\n                        </option>\n                      ))}\n                  </Form.Control>\n                ) : (\n                  <Form.Control\n                    className=\"mb-2\"\n                    type=\"text\"\n                    placeholder=\"Ad Interest\"\n                    name=\"interest\"\n                    value={userInput || \"\"}\n                    onChange={handleChangeText}\n                  />\n                )}\n              </Col>\n              <Col xs=\"auto\">\n                <Button disabled={!userInput} type=\"submit\" className=\"mb-2\">\n                  Get Data\n                </Button>\n              </Col>\n              <Col xs=\"auto\">\n                <Button variant=\"danger\" className=\"mb-2\" onClick={handleClear}>\n                  Clear\n                </Button>\n              </Col>\n              {noResults && (\n                <Col>\n                  <h4>\n                    <Badge display={false} variant=\"danger\">\n                      No Results\n                    </Badge>\n                  </h4>\n                </Col>\n              )}\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nconst mapData = (data) =>\n  data &&\n  data.map((i) => ({\n    interests: `\"interests\":[{\"id\":\"${i.id}\",\"name\":\"${i.name}\"}]}`,\n    name: i.name,\n    audience: i.audience_size,\n  }));\n\nexport default function InterestFinder() {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: `Showing results for interest: ${inputLabel}`,\n        columns: [\n          {\n            Header: \"ID/Name\",\n            accessor: \"interests\",\n            disableFilters: true,\n          },\n          {\n            Header: \"Name\",\n            accessor: \"name\",\n            disableFilters: true,\n          },\n          {\n            Header: \"Audience\",\n            accessor: \"audience\",\n            disableFilters: true,\n          },\n        ],\n      },\n    ],\n    [inputLabel]\n  );\n\n  return (\n    <>\n      <InputForm\n        dataType=\"interests\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n      />\n      <Row>\n        <Col>\n          {fetchedData && <DataTable columns={columns} data={mappedFetched} />}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function ImageFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: inputLabel,\n        columns: [\n          {\n            Header: \"Image Name\",\n            accessor: \"name\",\n            disableFilters: true,\n          },\n          {\n            Header: \"Hash\",\n            accessor: \"hash\",\n            disableFilters: true,\n          },\n          {\n            Header: \"ID (Account + Hash)\",\n            accessor: \"id\",\n            disableFilters: true,\n          },\n        ],\n      },\n    ],\n    [inputLabel]\n  );\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"name,id,hash\"}\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && <DataTable columns={columns} data={fetchedData} />}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function AssociatedImages(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Images\");\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: inputLabel,\n        columns: [\n          {\n            Header: \"ID (Account + Hash)\",\n            accessor: \"id\",\n            disableFilters: true,\n          },\n          {\n            Header: \"URL\",\n            accessor: (d) => <a href={d.url}>Download</a>,\n            disableFilters: true,\n          },\n          {\n            Header: \"Currently in use?\",\n            accessor: (d) => d.is_associated_creatives_in_adgroups.toString(),\n          },\n          {\n            Header: \"Created Time\",\n            accessor: \"created_time\",\n          },\n        ],\n      },\n    ],\n    [inputLabel]\n  );\n\n  return (\n    <>\n      <InputForm\n        searchFields={\n          \"id,name,url,is_associated_creatives_in_adgroups,created_time,updated_time\"\n        }\n        dataType=\"images\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && <DataTable columns={columns} data={fetchedData} />}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DataTable from \"../components/table.js\";\nimport InputForm from \"../components/form.js\";\n\nexport default function ImageFinder(props) {\n  const [fetchedData, setFetchedData] = useState(\"\");\n  const [inputLabel, setInputLabel] = useState(\"Campaigns\");\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: inputLabel,\n        columns: [\n          {\n            Header: \"Campaign Name\",\n            accessor: \"name\",\n            disableFilters: true,\n          },\n          {\n            Header: \"Campaign ID\",\n            accessor: \"id\",\n            disableFilters: true,\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            disableFilters: true,\n          },\n        ],\n      },\n    ],\n    [inputLabel]\n  );\n\n  return (\n    <>\n      <InputForm\n        searchFields={\"status,name\"}\n        dataType=\"campaigns\"\n        variant=\"select\"\n        dataSetter={setFetchedData}\n        labelSetter={setInputLabel}\n        selectOptions={props.selectOptions}\n      />\n      <Row>\n        <Col>\n          {fetchedData && <DataTable columns={columns} data={fetchedData} />}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GlobalContext } from \"./App.js\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ErrorModal from \"./components/errorModal.js\";\nimport InterestFinder from \"./tabs/interests.js\";\nimport ImageFinder from \"./tabs/images.js\";\nimport AssociatedImages from \"./tabs/usedImages.js\";\nimport Campaigns from \"./tabs/campaigns.js\";\nimport axios from \"axios\";\n\nexport default function FbAPIConnect() {\n  const [showFBButton, setShowFBButton] = useState(true);\n  const [userBusiness, setUserBusiness] = useState(undefined);\n  const [businessAdAccounts, setBusinessAdAccounts] = useState(undefined);\n  const { error, token } = useContext(GlobalContext);\n  const [, setErrorState] = error;\n  const [accessToken, setAccessToken] = token;\n\n  useEffect(() => {\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: \"1045150769237017\",\n        cookie: true,\n        xfbml: true,\n        version: \"v8.0\",\n      });\n\n      window.FB.AppEvents.logPageView();\n\n      window.FB.getLoginStatus((response) => {\n        if (response.status !== \"connected\") {\n          setShowFBButton(true);\n          window.FB.XFBML.parse();\n        } else {\n          setShowFBButton(false);\n          setAccessToken(response.authResponse.accessToken);\n        }\n      });\n    };\n\n    (function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n  }, [setAccessToken]);\n\n  useEffect(() => {\n    accessToken &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/me?fields=businesses&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setUserBusiness(response.data.businesses.data[0].id);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [accessToken, setErrorState]);\n\n  useEffect(() => {\n    userBusiness &&\n      axios\n        .get(\n          `https://graph.facebook.com/v8.0/${userBusiness}/owned_ad_accounts?fields=name&limit=500&access_token=${accessToken}`\n        )\n        .then((response) => {\n          setBusinessAdAccounts(\n            response.data.data.sort((a, b) => (a.id > b.id ? 1 : -1))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setErrorState(true);\n        });\n  }, [userBusiness, accessToken, setErrorState]);\n\n  return (\n    <>\n      <Container fluid className=\"mt-3\">\n        <Row className='mb-3'>\n          <Col xs={{ span: 4, offset: 8 }}>\n            {showFBButton ? (\n              <div\n                className=\"fb-login-button\"\n                data-size=\"small\"\n                data-button-type=\"login_with\"\n                data-layout=\"rounded\"\n                data-auto-logout-link=\"false\"\n                data-use-continue-as=\"false\"\n                data-width=\"\"\n              ></div>\n            ) : (\n              <Badge variant=\"success\">Connected to FB</Badge>\n            )}\n          </Col>\n        </Row>\n        <Tabs transition={false}>\n          <Tab eventKey=\"interests\" title=\"Interest Finder\">\n            <InterestFinder accessToken={accessToken} />\n          </Tab>\n          <Tab eventKey=\"images\" title=\"Image Finder\">\n            <ImageFinder\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"used\" title=\"Assets in Use\">\n            <AssociatedImages\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n          <Tab eventKey=\"campaigns\" title=\"Campaigns\">\n            <Campaigns\n              accessToken={accessToken}\n              selectOptions={businessAdAccounts}\n            />\n          </Tab>\n        </Tabs>\n      </Container>\n      <ErrorModal />\n    </>\n  );\n}\n","import React, { createContext, useState } from \"react\";\nimport FbAPIConnect from \"./main.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport const GlobalContext = createContext();\n\nconst Provider = ({ children }) => {\n  const [errorState, setErrorState] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n  const store = {\n    error: [errorState, setErrorState],\n    token: [accessToken, setAccessToken],\n  };\n  return (\n    <GlobalContext.Provider value={store}>{children}</GlobalContext.Provider>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <FbAPIConnect />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}